    [
    {
    "_id": "66",
    "corrected_question": "Is the Mona Lisa housed in the Louvre Museum?",
    "intermediary_question": "Is the <Louvre Museum> the <housing location> of the <Mona Lisa>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Mona_Lisa http://dbpedia.org/property/housedIn http://dbpedia.org/resource/Louvre_Museum }",
    "sparql_template_id": 153
    },
    {
    "_id": "67",
    "corrected_question": "Did Alexander Graham Bell invent the telephone?",
    "intermediary_question": "Is <Alexander Graham Bell> the <inventor> of the <telephone>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Alexander_Graham_Bell http://dbpedia.org/property/inventor http://dbpedia.org/resource/Telephone }",
    "sparql_template_id": 154
    },
    {
    "_id": "68",
    "corrected_question": "Is Mount Everest the tallest mountain in the world?",
    "intermediary_question": "Is <Mount Everest> the <tallest mountain> in the <world>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Mount_Everest http://dbpedia.org/property/tallestMountainIn http://dbpedia.org/resource/World }",
    "sparql_template_id": 155
    },
    {
    "_id": "69",
    "corrected_question": "Was William Shakespeare born in the 16th century?",
    "intermediary_question": "Is <William Shakespeare> the <born person> in the <16th century>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/William_Shakespeare http://dbpedia.org/property/bornIn http://dbpedia.org/resource/16th_century }",
    "sparql_template_id": 156
    },
    {
    "_id": "70",
    "corrected_question": "Is the Amazon River the longest river in the world?",
    "intermediary_question": "Is the <Amazon River> the <longest river> in the <world>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Amazon_River http://dbpedia.org/property/longestRiverIn http://dbpedia.org/resource/World }",
    "sparql_template_id": 157
    },
    {
    "_id": "71",
    "corrected_question": "Did Marie Curie win two Nobel Prizes in different scientific fields?",
    "intermediary_question": "Is <Marie Curie> the <winner> of <two Nobel Prizes> in <different scientific fields>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Marie_Curie http://dbpedia.org/property/winnerOf http://dbpedia.org/resource/Two_Nobel_Prizes ; http://dbpedia.org/property/inField http://dbpedia.org/resource/Different_Scientific_Fields }",
    "sparql_template_id": 158
    },
    {
    "_id": "72",
    "corrected_question": "Was the Berlin Wall constructed during the Cold War?",
    "intermediary_question": "Is the <Berlin Wall> the <constructed structure> during the <Cold War>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Berlin_Wall http://dbpedia.org/property/constructedDuring http://dbpedia.org/resource/Cold_War }",
    "sparql_template_id": 159
    },
    {
    "_id": "73",
    "corrected_question": "Is the speed of light faster than the speed of sound?",
    "intermediary_question": "Is the <speed of light> the <faster speed> than the <speed of sound>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Speed_of_light http://dbpedia.org/property/fasterThan http://dbpedia.org/resource/Speed_of_sound }",
    "sparql_template_id": 160
    },
    {
    "_id": "74",
    "corrected_question": "Did Leonardo da Vinci paint the Last Supper?",
    "intermediary_question": "Is <Leonardo da Vinci> the <painter> of the <Last Supper>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Leonardo_da_Vinci http://dbpedia.org/property/painterOf http://dbpedia.org/resource/Last_Supper }",
    "sparql_template_id": 161
    },
    {
    "_id": "75",
    "corrected_question": "Is the Pacific Ocean the largest ocean on Earth?",
    "intermediary_question": "Is the <Pacific Ocean> the <largest ocean> on <Earth>?",
    "sparql_query": "ASK WHERE { http://dbpedia.org/resource/Pacific_Ocean http://dbpedia.org/property/largestOceanOn http://dbpedia.org/resource/Earth }",
    "sparql_template_id": 162
    },
    {
        "_id": "229",
        "corrected_question": "What is the population of Tokyo, Japan?",
        "intermediary_question": "Provide the count of <population> in <Tokyo, Japan>?",
        "sparql_query": "SELECT DISTINCT ?population WHERE { <http://dbpedia.org/resource/Tokyo> <http://dbpedia.org/property/populationTotal> ?population . }",
        "sparql_template_id": 102
    },
    {
        "_id": "230",
        "corrected_question": "How many films has Steven Spielberg directed?",
        "intermediary_question": "Count the number of <films> directed by <Steven Spielberg>.",
        "sparql_query": "SELECT DISTINCT COUNT(?film) WHERE { ?director <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?film <http://dbpedia.org/property/directedBy> ?director . }",
        "sparql_template_id": 102
    },
    {
        "_id": "231",
        "corrected_question": "What is the area of Lake Superior?",
        "intermediary_question": "Provide the measurement of <area> for <Lake Superior>.",
        "sparql_query": "SELECT DISTINCT ?area WHERE { <http://dbpedia.org/resource/Lake_Superior> <http://dbpedia.org/property/areaTotal> ?area . }",
        "sparql_template_id": 102
    },
    {
        "_id": "232",
        "corrected_question": "How many Grammy Awards has Beyoncé won?",
        "intermediary_question": "Count the number of <Grammy Awards> won by <Beyoncé>.",
        "sparql_query": "SELECT DISTINCT COUNT(?award) WHERE { <http://dbpedia.org/resource/Beyoncé> <http://dbpedia.org/property/grammyAwards> ?award . }",
        "sparql_template_id": 102
    },
    {
        "_id": "233",
        "corrected_question": "What is the height of Mount Everest?",
        "intermediary_question": "Provide the measurement of <height> for <Mount Everest>.",
        "sparql_query": "SELECT DISTINCT ?height WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/property/elevation> ?height . }",
        "sparql_template_id": 102
    },
    {
        "_id": "2687",
        "corrected_question": "Name the country with currency as Aureus?",
        "intermediary_question": "What is the <country> whose <currency> is <Aureus>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_template_id": 301
    },
    {
        "_id": "2688",
        "corrected_question": "List the capitals of European countries.",
        "intermediary_question": "List the capitals of <European countries>.",
        "sparql_query": "SELECT DISTINCT ?capital WHERE {?country <http://dbpedia.org/ontology/continent> <http://dbpedia.org/resource/Europe> . ?country <http://dbpedia.org/ontology/capital> ?capital}",
        "sparql_template_id": 302
    },
    {
        "_id": "2689",
        "corrected_question": "Where is the Eiffel Tower located?",
        "intermediary_question": "Where is the <Eiffel Tower> located?",
        "sparql_query": "SELECT DISTINCT ?location WHERE {<http://dbpedia.org/resource/Eiffel_Tower> <http://dbpedia.org/ontology/location> ?location}",
        "sparql_template_id": 303
    },
    {
        "_id": "2690",
        "corrected_question": "What are the official languages of Canada?",
        "intermediary_question": "What are the official languages of <Canada>?",
        "sparql_query": "SELECT DISTINCT ?language WHERE {<http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/officialLanguage> ?language}",
        "sparql_template_id": 304
    },
{
        "_id": "2691",
        "corrected_question": "Who is the president of France?",
        "intermediary_question": "Who is the president of <France>?",
        "sparql_query": "SELECT DISTINCT ?president WHERE {<http://dbpedia.org/resource/France> <http://dbpedia.org/ontology/president> ?president}",
        "sparql_template_id": 305
    },
    {
        "_id": "2692",
        "corrected_question": "Name the rivers in Asia.",
        "intermediary_question": "Name the rivers in <Asia>.",
        "sparql_query": "SELECT DISTINCT ?river WHERE {?river <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Asia>}",
        "sparql_template_id": 306
    },
    {
        "_id": "2693",
        "corrected_question": "What is the population of Brazil?",
        "intermediary_question": "What is the population of <Brazil>?",
        "sparql_query": "SELECT DISTINCT ?population WHERE {<http://dbpedia.org/resource/Brazil> <http://dbpedia.org/ontology/populationTotal> ?population}",
        "sparql_template_id": 307
    },
{
        "_id": "2694",
        "corrected_question": "What is the capital of Australia?",
        "intermediary_question": "What is the capital of <Australia>?",
        "sparql_query": "SELECT DISTINCT ?capital WHERE {<http://dbpedia.org/resource/Australia> <http://dbpedia.org/ontology/capital> ?capital}",
        "sparql_template_id": 308
    },
    {
        "_id": "2695",
        "corrected_question": "List the countries in South America.",
        "intermediary_question": "List the countries in <South America>.",
        "sparql_query": "SELECT DISTINCT ?country WHERE {?country <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/South_America>}",
        "sparql_template_id": 309
    },
    {
        "_id": "2696",
        "corrected_question": "Who wrote 'Romeo and Juliet'?",
        "intermediary_question": "Who wrote '<Romeo and Juliet>'?",
        "sparql_query": "SELECT DISTINCT ?author WHERE {<http://dbpedia.org/resource/Romeo_and_Juliet> <http://dbpedia.org/ontology/author> ?author}",
        "sparql_template_id": 310
    },
    {
        "_id": "2697",
        "corrected_question": "Where was Albert Einstein born?",
        "intermediary_question": "Where was <Albert Einstein> born?",
        "sparql_query": "SELECT DISTINCT ?birthPlace WHERE {<http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/birthPlace> ?birthPlace}",
        "sparql_template_id": 311
    },
    {
        "_id": "2698",
        "corrected_question": "Name the moons of Jupiter.",
        "intermediary_question": "Name the moons of <Jupiter>.",
        "sparql_query": "SELECT DISTINCT ?moon WHERE {<http://dbpedia.org/resource/Jupiter> <http://dbpedia.org/ontology/moon> ?moon}",
        "sparql_template_id": 312
    },
    {
        "_id": "2699",
        "corrected_question": "Who won the Nobel Prize in Physics in 2020?",
        "intermediary_question": "Who won the Nobel Prize in Physics in <2020>?",
        "sparql_query": "SELECT DISTINCT ?winner WHERE {<http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/awardedInYear> <http://dbpedia.org/resource/2020> . ?winner <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Physics>}",
        "sparql_template_id": 313
    },
    {
        "_id": "2700",
        "corrected_question": "What is the height of Mount Everest?",
        "intermediary_question": "What is the height of <Mount Everest>?",
        "sparql_query": "SELECT DISTINCT ?height WHERE {<http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/elevation> ?height}",
        "sparql_template_id": 314
    },
    {
        "_id": "2701",
        "corrected_question": "Who directed the movie 'Inception'?",
        "intermediary_question": "Who directed the movie '<Inception>'?",
        "sparql_query": "SELECT DISTINCT ?director WHERE {<http://dbpedia.org/resource/Inception> <http://dbpedia.org/ontology/director> ?director}",
        "sparql_template_id": 315
    },
    {
        "_id": "2702",
        "corrected_question": "List the prime ministers of the United Kingdom.",
        "intermediary_question": "List the prime ministers of the <United Kingdom>.",
        "sparql_query": "SELECT DISTINCT ?primeMinister WHERE {<http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/ontology/leaderName> ?primeMinister}",
        "sparql_template_id": 316
    },
    {
        "_id": "2703",
        "corrected_question": "Where is the Great Barrier Reef located?",
        "intermediary_question": "Where is the <Great Barrier Reef> located?",
        "sparql_query": "SELECT DISTINCT ?location WHERE {<http://dbpedia.org/resource/Great_Barrier_Reef> <http://dbpedia.org/ontology/location> ?location}",
        "sparql_template_id": 317
    }
]